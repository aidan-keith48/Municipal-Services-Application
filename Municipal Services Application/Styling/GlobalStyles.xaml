<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  Defined Colors  -->
    <!--  Dark Blue color definition  -->
    <Color x:Key="DarkBlue">#010a5a</Color>
    <!--  Medium Blue color definition  -->
    <Color x:Key="MediumBlue">#3176b1</Color>
    <!--  Light Blue 1 color definition  -->
    <Color x:Key="LightBlue1">#4eb2d4</Color>
    <!--  Light Blue 2 color definition  -->
    <Color x:Key="LightBlue2">#6ec7e1</Color>
    <!--  Light Blue 3 color definition  -->
    <Color x:Key="LightBlue3">#8edce9</Color>

    <!--  Content Background Image Brush  -->
    <ImageBrush x:Key="ContentBackground" ImageSource="/images/backgroundMun.jpg" />

    <!--  Defined Brushes  -->
    <!--  Dark Blue brush definition  -->
    <SolidColorBrush x:Key="DarkBlueBrush" Color="{StaticResource DarkBlue}" />
    <!--  Medium Blue brush definition  -->
    <SolidColorBrush x:Key="MediumBlueBrush" Color="{StaticResource MediumBlue}" />
    <!--  Light Blue 1 brush definition  -->
    <SolidColorBrush x:Key="LightBlue1Brush" Color="{StaticResource LightBlue1}" />
    <!--  Light Blue 2 brush definition  -->
    <SolidColorBrush x:Key="LightBlue2Brush" Color="{StaticResource LightBlue2}" />
    <!--  Light Blue 3 brush definition  -->
    <SolidColorBrush x:Key="LightBlue3Brush" Color="{StaticResource LightBlue3}" />

    <!--  Label Style  -->
    <!--  Style for labels  -->
    <Style x:Key="LabelStyle" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <!--  TextBox Style with Rounded Corners  -->
    <!--  Style for text boxes with rounded corners  -->
    <Style x:Key="RoundedTextBox" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ComboBox Style  -->
    <!--  Style for combo boxes  -->
    <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Margin" Value="0,5" />
        <Setter Property="Height" Value="30" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  Button Style with Rounded Corners  -->
    <!--  Style for buttons with rounded corners  -->
    <Style x:Key="RoundedButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Menu Button Style  -->
    <!--  Style for menu buttons  -->
    <Style
        x:Key="MenuBtn"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter
                            Margin="5,0,20,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <!--  Directly animating the Background property  -->
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="{StaticResource MediumBlue}"
                                Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation
                                Storyboard.TargetProperty="Background.Color"
                                To="Transparent"
                                Duration="0:0:0.3" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
